!function(e){var t={};function a(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=5)}([function(e,t,a){(function(e,n){var i=/%[sdj%]/g;t.format=function(e){if(!y(e)){for(var t=[],a=0;a<arguments.length;a++)t.push(l(arguments[a]));return t.join(" ")}a=1;for(var n=arguments,r=n.length,o=String(e).replace(i,function(e){if("%%"===e)return"%";if(a>=r)return e;switch(e){case"%s":return String(n[a++]);case"%d":return Number(n[a++]);case"%j":try{return JSON.stringify(n[a++])}catch(e){return"[Circular]"}default:return e}}),s=n[a];a<r;s=n[++a])h(s)||!w(s)?o+=" "+s:o+=" "+l(s);return o},t.deprecate=function(a,i){if(g(e.process))return function(){return t.deprecate(a,i).apply(this,arguments)};if(!0===n.noDeprecation)return a;var r=!1;return function(){if(!r){if(n.throwDeprecation)throw new Error(i);n.traceDeprecation?console.trace(i):console.error(i),r=!0}return a.apply(this,arguments)}};var r,o={};function l(e,a){var n={seen:[],stylize:d};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),v(a)?n.showHidden=a:a&&t._extend(n,a),g(n.showHidden)&&(n.showHidden=!1),g(n.depth)&&(n.depth=2),g(n.colors)&&(n.colors=!1),g(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=s),m(n,e,n.depth)}function s(e,t){var a=l.styles[t];return a?"["+l.colors[a][0]+"m"+e+"["+l.colors[a][1]+"m":e}function d(e,t){return e}function m(e,a,n){if(e.customInspect&&a&&C(a.inspect)&&a.inspect!==t.inspect&&(!a.constructor||a.constructor.prototype!==a)){var i=a.inspect(n,e);return y(i)||(i=m(e,i,n)),i}var r=function(e,t){if(g(t))return e.stylize("undefined","undefined");if(y(t)){var a="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(a,"string")}if(f(t))return e.stylize(""+t,"number");if(v(t))return e.stylize(""+t,"boolean");if(h(t))return e.stylize("null","null")}(e,a);if(r)return r;var o=Object.keys(a),l=function(e){var t={};return e.forEach(function(e,a){t[e]=!0}),t}(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(a)),k(a)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return c(a);if(0===o.length){if(C(a)){var s=a.name?": "+a.name:"";return e.stylize("[Function"+s+"]","special")}if(b(a))return e.stylize(RegExp.prototype.toString.call(a),"regexp");if(T(a))return e.stylize(Date.prototype.toString.call(a),"date");if(k(a))return c(a)}var d,w="",S=!1,D=["{","}"];(p(a)&&(S=!0,D=["[","]"]),C(a))&&(w=" [Function"+(a.name?": "+a.name:"")+"]");return b(a)&&(w=" "+RegExp.prototype.toString.call(a)),T(a)&&(w=" "+Date.prototype.toUTCString.call(a)),k(a)&&(w=" "+c(a)),0!==o.length||S&&0!=a.length?n<0?b(a)?e.stylize(RegExp.prototype.toString.call(a),"regexp"):e.stylize("[Object]","special"):(e.seen.push(a),d=S?function(e,t,a,n,i){for(var r=[],o=0,l=t.length;o<l;++o)I(t,String(o))?r.push(u(e,t,a,n,String(o),!0)):r.push("");return i.forEach(function(i){i.match(/^\d+$/)||r.push(u(e,t,a,n,i,!0))}),r}(e,a,n,l,o):o.map(function(t){return u(e,a,n,l,t,S)}),e.seen.pop(),function(e,t,a){if(e.reduce(function(e,t){return 0,t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60)return a[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+a[1];return a[0]+t+" "+e.join(", ")+" "+a[1]}(d,w,D)):D[0]+w+D[1]}function c(e){return"["+Error.prototype.toString.call(e)+"]"}function u(e,t,a,n,i,r){var o,l,s;if((s=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?l=s.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):s.set&&(l=e.stylize("[Setter]","special")),I(n,i)||(o="["+i+"]"),l||(e.seen.indexOf(s.value)<0?(l=h(a)?m(e,s.value,null):m(e,s.value,a-1)).indexOf("\n")>-1&&(l=r?l.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+l.split("\n").map(function(e){return"   "+e}).join("\n")):l=e.stylize("[Circular]","special")),g(o)){if(r&&i.match(/^\d+$/))return l;(o=JSON.stringify(""+i)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.stylize(o,"string"))}return o+": "+l}function p(e){return Array.isArray(e)}function v(e){return"boolean"==typeof e}function h(e){return null===e}function f(e){return"number"==typeof e}function y(e){return"string"==typeof e}function g(e){return void 0===e}function b(e){return w(e)&&"[object RegExp]"===S(e)}function w(e){return"object"==typeof e&&null!==e}function T(e){return w(e)&&"[object Date]"===S(e)}function k(e){return w(e)&&("[object Error]"===S(e)||e instanceof Error)}function C(e){return"function"==typeof e}function S(e){return Object.prototype.toString.call(e)}function D(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(g(r)&&(r=n.env.NODE_DEBUG||""),e=e.toUpperCase(),!o[e])if(new RegExp("\\b"+e+"\\b","i").test(r)){var a=n.pid;o[e]=function(){var n=t.format.apply(t,arguments);console.error("%s %d: %s",e,a,n)}}else o[e]=function(){};return o[e]},t.inspect=l,l.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},l.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=p,t.isBoolean=v,t.isNull=h,t.isNullOrUndefined=function(e){return null==e},t.isNumber=f,t.isString=y,t.isSymbol=function(e){return"symbol"==typeof e},t.isUndefined=g,t.isRegExp=b,t.isObject=w,t.isDate=T,t.isError=k,t.isFunction=C,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||void 0===e},t.isBuffer=a(3);var E=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function I(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){console.log("%s - %s",function(){var e=new Date,t=[D(e.getHours()),D(e.getMinutes()),D(e.getSeconds())].join(":");return[e.getDate(),E[e.getMonth()],t].join(" ")}(),t.format.apply(t,arguments))},t.inherits=a(4),t._extend=function(e,t){if(!t||!w(t))return e;for(var a=Object.keys(t),n=a.length;n--;)e[a[n]]=t[a[n]];return e}}).call(this,a(1),a(2))},function(e,t){var a;a=function(){return this}();try{a=a||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(a=window)}e.exports=a},function(e,t){var a,n,i=e.exports={};function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function l(e){if(a===setTimeout)return setTimeout(e,0);if((a===r||!a)&&setTimeout)return a=setTimeout,setTimeout(e,0);try{return a(e,0)}catch(t){try{return a.call(null,e,0)}catch(t){return a.call(this,e,0)}}}!function(){try{a="function"==typeof setTimeout?setTimeout:r}catch(e){a=r}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(e){n=o}}();var s,d=[],m=!1,c=-1;function u(){m&&s&&(m=!1,s.length?d=s.concat(d):c=-1,d.length&&p())}function p(){if(!m){var e=l(u);m=!0;for(var t=d.length;t;){for(s=d,d=[];++c<t;)s&&s[c].run();c=-1,t=d.length}s=null,m=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function v(e,t){this.fun=e,this.array=t}function h(){}i.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var a=1;a<arguments.length;a++)t[a-1]=arguments[a];d.push(new v(e,t)),1!==d.length||m||l(p)},v.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=h,i.addListener=h,i.once=h,i.off=h,i.removeListener=h,i.removeAllListeners=h,i.emit=h,i.prependListener=h,i.prependOnceListener=h,i.listeners=function(e){return[]},i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(e,t){e.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},function(e,t){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var a=function(){};a.prototype=t.prototype,e.prototype=new a,e.prototype.constructor=e}},function(e,t,a){"use strict";a.r(t);class n{constructor(e){this.scene=e.scene,this.isPressed=e.isPressed,this.scene.canvas.addEventListener("mousedown",this.clickDown.bind(this)),this.scene.canvas.addEventListener("mouseup",this.clickUp.bind(this)),this.scene.canvas.addEventListener("mousemove",this.move.bind(this))}clickDown(e){console.log(e)}clickUp(e){this.isPressed=!1,this.selectedPod=!1}move(e){this.selectedPod&&this.selectedPod.move(e)}}class i{constructor(e){this.scene=e.scene,this.pressedKeys=new Set,window.addEventListener("keyup",this.keyU.bind(this)),window.addEventListener("keydown",this.keyD.bind(this))}a(e){e.rotate(Math.PI/32,"x")}s(e){e.rotate(Math.PI/32,"y")}d(e){e.rotate(Math.PI/32,"z")}ArrowLeft(e){e.translate(-10,0,0,0)}ArrowRight(e){e.translate(10,0,0,0)}ArrowUp(e){e.translate(0,-10,0,0)}ArrowDown(e){e.translate(0,10,0,0)}keyD(e){this.pressedKeys.add(e.key)}keyU(e){this.pressedKeys=new Set}run(e){return Array.from(this.pressedKeys).map(t=>this[t](e))}}class r{static randInt(e,t){return Math.floor(e+Math.random()*t)}}class o{static add(e,t){return e+t}static multiply(e,t){return e*t}static divide(e,t){return e/t}static subtract(e,t){return e-t}static min(e,t){return Math.min(e,t)}static max(e,t){return Math.max(e,t)}static square(e){return e*e}}var l={ND_SLICE_CHARACTER:":",ND_PRINT_PRECISION:5,ND_NUMBER_REGEX:new RegExp(/-?\d+\.?(\d+)?/g),NUMBER:"number"};class s{static compareManyTypes(e){return e.map(function(e){return void 0===e.type?Float64Array:e.type}).reduce(this.compareTypes)}static compareTypes(e,t){return s.TYPE_RANKINGS[e]>s.TYPE_RANKINGS[t]?e:t}}s.TYPE_MAP={uint8:Uint8ClampedArray,int8:Int8Array,uint16:Uint16Array,int16:Int16Array,uint32:Uint32Array,int32:Int32Array,float32:Float32Array,float64:Float64Array},s.TYPE_RANKINGS={uint8:0,int8:1,uint16:2,int16:3,uint32:4,int32:5,float32:6,float64:7,undefined:7};var d={math:class{static*getIntegerRange(e,t,a){for(;e<t;)yield e,e+=a}static isNumber(e){return!isNaN(parseFloat(e))&&isFinite(e)}},array:{header:class{static getStride(e,t=1){return e.reduceRight(function(e,t){return[t*e[0]].concat(e)},[t]).slice(1)}static isContiguousSlice(e){const t=[...e.keys()].filter(function(t){return!(e[t]>=0)});if(!t.length)return!0;for(let e=0,a=1;a<t.length;e++,a++)if(t[e]+1!==t[a])return!1;return!0}static smartReshape(e,t,a){return e>0?e:this.size/-c.multiply(a)}},format:class{static formatNumber(e){return e.toPrecision(l.ND_PRINT_PRECISION).substring(0,l.ND_PRINT_PRECISION)}static likeNumpy(e){return e.map(function(e){return Array.isArray(e)?this.likeNumpy(e):this.formatNumber(e)},this)}},nd:class{static broadcast(e,t){return e.constructor===Number?e:e.header.shape.length!==t.length?this.read(e,t.slice(-e.header.shape.length)):this.read(e,t)}static lookup(e,t){return e.header.offset+t.reduce(function(t,a,n){return t+a*e.header.stride[n]},0)}static write(e,t,a){e.data[this.lookup(e,t)]=a}static read(e,t){return e.data[this.lookup(e,t)]}static readMany(e,t){return e.map(function(e){return this.broadcast(e,t)},this)}static*indices(e,t=[]){void 0===e[0]&&(yield t),e[0]===l.ND_SLICE_CHARACTER&&(yield*this.indices(e.slice(1),t.concat(l.ND_SLICE_CHARACTER)));for(let a=0;a<e[0];a++)yield*this.indices(e.slice(1),t.concat(a))}},raw:class{static*flatten(e){for(let t=0;t<e.length;t++)Array.isArray(e[t])?yield*this.flatten(e[t]):yield e[t]}static createRawArray(e,t=function(){return 0}){return e.length?new Array(e[0]).fill(null).map(function(){return this.createRawArray(e.slice(1),t)},this):t()}static cycle(e,t){const a=[...e];return a.splice(-t%a.length).concat(a)}static getShape(e,t=[]){return e.length?this.getShape(e[0],t.concat(e.length)):t}},type:s}};class m{constructor(e){this.shape=e.shape,this.size=c.multiply(this.shape),this.stride=void 0!==e.stride?e.stride:d.array.header.getStride(this.shape),this.offset=void 0!==e.offset?e.offset:0,this.contig=void 0===e.contig||e.contig}copy(){return new m(JSON.parse(JSON.stringify(this)))}sliceByAxis(e){return e.sort(o.subtract),this.shape.map(function(t,a){return e[0]!==a?":":(e.shift(),t)})}slice(e){const t=this.copy();for(let a=0,n=0;a<this.shape.length;a++){if(void 0===e[a])continue;let[i,r]=e[a].split(":").map(Number);0===r&&0===i||(r<=0&&(r+=this.shape[a]),t.shape[a-n]=r-i,t.offset+=this.stride[a]*i,void 0===r&&(t.stride.splice(a-n,1),t.shape.splice(a-n,1),n++))}return t.contig=d.array.header.isContiguousSlice(e),t.size=c.multiply(t.shape),t}reshape(e){const t=this.copy(),a=t.stride.slice(-1).pop();return t.shape=e.map(d.array.header.smartReshape.bind(this)),t.stride=d.array.header.getStride(t.shape,a),t}transpose(){const e=this.copy();return e.stride.reverse(),e.shape.reverse(),e.contig=!1,e}}class c{static add(e){return e.reduce(o.add)}static multiply(e){return e.reduce(o.multiply,1)}static divide(e){return e.reduce(o.divide)}static subtract(e){return e.reduce(o.subtract)}static min(e){return e.reduce(o.min)}static max(e){return e.reduce(o.max)}static square(e){return e.map(o.square)}static mean(e){return c.add(e)/e.length}static norm(e){return Math.sqrt(c.add(c.square(e)))}static elementwise(e,t){const a=d.array.type.compareManyTypes(t),n=new a(t[0].data.length),i=new m({shape:t[0].header.shape});let r=0;for(const a of d.array.nd.indices(i.shape))n[r++]=e(d.array.nd.readMany(t,a));return[n,i,a]}}class u{static multiply(e,t){const a=d.array.type.compareTypes(e.type,t.type),n=new m({shape:[e.header.shape[0],t.header.shape[1]]}),i=new a(e.header.shape[0]*t.header.shape[1]);for(let a=0,r=0;a<n.shape[0];a++)for(let o=0;o<n.shape[1];o++,r++)for(let n=0;n<e.header.shape[1];n++)i[r]+=d.array.nd.read(e,[a,n])*d.array.nd.read(t,[n,o]);return[i,n,a]}}var p=a(0);class v{c1(e,t="float64"){const a=d.array.raw.flatten(e),n=d.array.raw.getShape(e);return this.type=d.array.type.TYPE_MAP[t],this.data=new this.type(a),this.header=new m({shape:n}),this}c2(e,t,a){return this.data=e,this.header=t,this.type=a,this.header.shape.length?this:this.data[this.header.offset]}static array(e,t="float64"){return(new v).c1(e,t)}static zeros(...e){return(new v).c1(d.array.raw.createRawArray(e))}static arange(...e){return 1===e.length?(new v).c1([...d.math.getIntegerRange(0,e[0],1)]):2===e.length?(new v).c1([...d.math.getIntegerRange(e[0],e[1],1)]):3===e.length?(new v).c1([...d.math.getIntegerRange(e[0],e[1],e[2])]):void 0}*[Symbol.iterator](e=[0]){for(const t of d.array.nd.indices(this.header.sliceByAxis(e)))yield this.slice(...t)}axisFn(e,t){return e.length?(new v).c2(...c.elementwise(t,[...this[Symbol.iterator](e)])):t(this.data)}min(...e){return this.axisFn(e,c.min)}max(...e){return this.axisFn(e,c.max)}mean(...e){return this.axisFn(e,c.mean)}norm(...e){return this.axisFn(e,c.norm)}elementFn(e,t){return e.constructor===Array&&(e=v.array(e)),(new v).c2(...c.elementwise(t,[this,e]))}add(e){return this.elementFn(e,c.add)}subtract(e){return this.elementFn(e,c.subtract)}multiply(e){return this.elementFn(e,c.multiply)}divide(e){return this.elementFn(e,c.divide)}static dot(...e){return e.reduce(function(e,t){return e.dot(t)})}dot(e){return e.constructor===Array&&(e=v.array(e)),(new v).c2(...u.multiply(this,e))}set(...e){return function(t){t.constructor===Array&&(t=v.array(t));const a=this.slice(...e);if(a.constructor===Number)return d.array.nd.write(this,e,t),this;for(const e of d.array.nd.indices(a.header.shape))d.array.nd.write(a,e,d.array.nd.broadcast(t,e));return this}.bind(this)}slice(...e){return(new v).c2(this.data,this.header.slice(e.map(String)),this.type)}T(){return(new v).c2(this.data,this.header.transpose(),this.type)}reshape(...e){return this.header.contig?(new v).c2(this.data,this.header.reshape(e),this.type):(new v).c2(new this.type(this.toRawFlat()),new m({shape:e}),this.type)}toRawArray(){return[...this].map(function(e){return e instanceof v?e.toRawArray():e})}toRawFlat(){return[...this[Symbol.iterator](...this.header.shape.keys())]}toString(){return d.array.format.likeNumpy(this.toRawArray())}[p.inspect.custom](){return this.toString()}}v.random=class{static randint(e,t,a){return v.array(d.array.raw.createRawArray(a,function(){return r.randInt(e,t)}))}};var h={image:class{constructor(e){this.media=e}createBitmap(){const[e,t]=this.media.header.shape;return createImageBitmap(new ImageData(this.media.data,t,e))}async render(e,t,a){const n=t.origin.slice(0),i=t.origin.slice(1);e.context.drawImage(await this.createBitmap(),n,i)}static matches(e){return e.data instanceof Uint8ClampedArray}},scatter:class{constructor(e){this.originalMedia=e.reshape(-1,4)}async render(e,t,a,n){this.displayMedia||(this.displayMedia=t.reposition(this.originalMedia));for(let t=0;t<this.displayMedia.header.shape[0];t++){const[a,n,i,r]=this.displayMedia.slice(t),[o,l,s,d]=this.originalMedia.slice(t);e.context.fillStyle=`rgb(${o}, ${l}, ${s})`,e.context.fillRect(a,n,10,10)}}}};class f{static getMediaSource(e){return new h.scatter(e)}}class y{constructor(e){this.origin=e.origin,this.size=e.size,this.shape=e.shape(this.size,this.origin)}reposition(e){return e.dot(y.translate(...e.mean(0).multiply(-1))).dot(y.scale(...this.size.multiply(1.3).divide(e.norm(1).max()).set(3)(1))).dot(y.translate(...this.origin))}static translate(e,t,a){return v.array([[1,0,0,0],[0,1,0,0],[0,0,1,0],[e,t,a,1]])}static scale(e,t,a){return v.array([[e,0,0,0],[0,t,0,0],[0,0,a,0],[0,0,0,1]])}static rotate(e,t){const a=Math.cos(e),n=Math.sin(e);return"x"===t?v.array([[1,0,0,0],[0,a,n,0],[0,-n,a,0],[0,0,0,1]]):"y"===t?v.array([[a,0,n,0],[0,1,0,0],[-n,0,a,0],[0,0,0,1]]):"z"===t?v.array([[a,n,0,0],[-n,a,0,0],[0,0,1,0],[0,0,0,1]]):void 0}}class g{constructor(e){this.display=e,this.getExecutorAndBind=this.getExecutorAndBind.bind(this)}getExecutorAndBind(e){return function(t,a){setTimeout(t,this.display.animationPause,e)}}step(e){return new Promise(this.getExecutorAndBind(e))}}class b{constructor(e){this.hasBorder=e.border}}class w{constructor(e){this.doc=e,this.rawi=this.doc.extract(this.vint()).reduce(this.doc.specs.vintfull,0),this.size=this.doc.extract(this.vint()).reduce(this.doc.specs.vintrmlz,0),this.size>0?this.data=this.doc.advance(this.size):this.data=[this.doc.head,this.doc.length]}vint(){const e=this.doc.peek(),t=this.doc.constructor.utils.leadZ(e)+1;return this.doc.advance(t)}toString(){return{rawi:this.rawi,size:this.size,data:this.data}}[p.inspect.custom](){return this.toString()}}class T{static vintfull(e,t){return e<<8|t}static vintrmlz(e,t,a,n){return 0===a?t^256>>n.length:e<<8|t}}T.element=w;class k{constructor(e){this.bytes=e.bytes,this.length=this.bytes.length,this.head=0}read(){return this.bytes[this.head++]}isEmpty(){return this.head>=this.bytes.length}peek(){return this.bytes[this.head]}extract(e){return this.bytes.slice(...e)}advance(e){return[this.head,this.head+=e]}}k.utils=class{static leadZ(e){return e>=128?0:e>=64?1:e>=32?2:e>=16?3:e>=8?4:e>=4?5:e>=2?6:e>=1?7:8}static toString(e,t){return e+String.fromCharCode(t)}};class C extends k{constructor(e){for(super(e),this.specs=e.specs||T,this.elements=[];!this.isEmpty();)this.elements.push(new this.specs.element(this))}toString(){return this.elements}[p.inspect.custom](){return p.inspect(this.toString(),!1,null,!0)}}class S{constructor(e){this.id=e.id,this.name=e.name,this.level=e.level,this.type=e.type,this.webm=e.webm,this.description=e.description,this.mandatory=e.mandatory,this.multiple=e.multiple,this.range=e.range,this.default=e.default,this.v1=e.v1,this.v2=e.v2,this.v3=e.v3,this.v4=e.v4}toString(){return this.name.trim()}[p.inspect.custom](){return this.toString()}}var D={"00011010010001011101111110100011":new S({name:"EBML                       ",level:"0 ",id:"1a45dfa3",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Set the EBML characteristics of the data to follow. Each EBML document has to start with this."}),"00000000000000000100001010000110":new S({name:"EBMLVersion                ",level:"1 ",id:"00004286",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The version of EBML parser used to create the file."}),"00000000000000000100001011110111":new S({name:"EBMLReadVersion            ",level:"1 ",id:"000042f7",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The minimum EBML version a parser has to support to read this file."}),"00000000000000000100001011110010":new S({name:"EBMLMaxIDLength            ",level:"1 ",id:"000042f2",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"4                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The maximum length of the IDs you'll find in this file (4 or less in Matroska)."}),"00000000000000000100001011110011":new S({name:"EBMLMaxSizeLength          ",level:"1 ",id:"000042f3",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"8                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The maximum length of the sizes you'll find in this file (8 or less in Matroska). This does not override the Element size indicated at the beginning of an Element. Elements that have an indicated size which is larger than what is allowed by EBMLMaxSizeLength shall be considered invalid."}),"00000000000000000100001010000010":new S({name:"DocType                    ",level:"1 ",id:"00004282",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"matroska                      ",type:"s",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A string that describes the type of document that follows this EBML header. 'matroska' in our case or 'webm' for webm files."}),"00000000000000000100001010000111":new S({name:"DocTypeVersion             ",level:"1 ",id:"00004287",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The version of DocType interpreter used to create the file."}),"00000000000000000100001010000101":new S({name:"DocTypeReadVersion         ",level:"1 ",id:"00004285",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The minimum DocType version an interpreter has to support to read this file."}),"00000000000000000000000011101100":new S({name:"Void                       ",level:"g ",id:"000000ec",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"b",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Used to void damaged data, to avoid unexpected behaviors when using damaged data. The content is discarded. Also used to reserve space in a sub-element for later use."}),"00000000000000000000000010111111":new S({name:"CRC-32                     ",level:"g ",id:"000000bf",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The CRC is computed on all the data of the Master-element it's in. The CRC Element should be the first in it's parent master for easier reading. All level 1 Elements should include a CRC-32. The CRC in use is the IEEE CRC32 Little Endian"}),"00011011010100111000011001100111":new S({name:"SignatureSlot              ",level:"g ",id:"1b538667",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Contain signature of some (coming) Elements in the stream."}),"00000000000000000111111010001010":new S({name:"SignatureAlgo              ",level:"1 ",id:"00007e8a",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Signature algorithm used (1=RSA, 2=elliptic)."}),"00000000000000000111111010011010":new S({name:"SignatureHash              ",level:"1 ",id:"00007e9a",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Hash algorithm used (1=SHA1-160, 2=MD5)."}),"00000000000000000111111010100101":new S({name:"SignaturePublicKey         ",level:"1 ",id:"00007ea5",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The public key to use with the algorithm (in the case of a PKI-based signature)."}),"00000000000000000111111010110101":new S({name:"Signature                  ",level:"1 ",id:"00007eb5",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The signature of the data (until a new."}),"00000000000000000111111001011011":new S({name:"SignatureElements          ",level:"1 ",id:"00007e5b",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Contains Elements that will be used to compute the signature."}),"00000000000000000111111001111011":new S({name:"SignatureElementList       ",level:"2 ",id:"00007e7b",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A list consists of a number of consecutive Elements that represent one case where data is used in signature. Ex: Cluster|Block|BlockAdditional means that the BlockAdditional of all Blocks in all Clusters is used for encryption."}),"00000000000000000110010100110010":new S({name:"SignedElement              ",level:"3 ",id:"00006532",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"An Element ID whose data will be used to compute the signature."}),"00011000010100111000000001100111":new S({name:"Segment                    ",level:"0 ",id:"18538067",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The Root Element that contains all other Top-Level Elements (Elements defined only at Level 1). A Matroska file is composed of 1 Segment."}),"00010001010011011001101101110100":new S({name:"SeekHead                   ",level:"1 ",id:"114d9b74",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains the position of other Top-Level Elements."}),"00000000000000000100110110111011":new S({name:"Seek                       ",level:"2 ",id:"00004dbb",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains a single seek entry to an EBML Element."}),"00000000000000000101001110101011":new S({name:"SeekID                     ",level:"3 ",id:"000053ab",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The binary ID corresponding to thename"}),"00000000000000000101001110101100":new S({name:"SeekPosition               ",level:"3 ",id:"000053ac",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The position of the Element in the Segment in octets (0 = first level 1 Element)."}),"00010101010010011010100101100110":new S({name:"Info                       ",level:"1 ",id:"1549a966",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains miscellaneous general information and statistics on the file."}),"00000000000000000111001110100100":new S({name:"SegmentUID                 ",level:"2 ",id:"000073a4",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A randomly generated unique ID to identify the current Segment between many others (128 bits)."}),"00000000000000000111001110000100":new S({name:"SegmentFilename            ",level:"2 ",id:"00007384",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A filename corresponding to this Segment."}),"00000000001111001011100100100011":new S({name:"PrevUID                    ",level:"2 ",id:"003cb923",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the previous chained Segment (128 bits)."}),"00000000001111001000001110101011":new S({name:"PrevFilename               ",level:"2 ",id:"003c83ab",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"An escaped filename corresponding to the previous Segment."}),"00000000001111101011100100100011":new S({name:"NextUID                    ",level:"2 ",id:"003eb923",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the next chained Segment (128 bits)."}),"00000000001111101000001110111011":new S({name:"NextFilename               ",level:"2 ",id:"003e83bb",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"An escaped filename corresponding to the next Segment."}),"00000000000000000100010001000100":new S({name:"SegmentFamily              ",level:"2 ",id:"00004444",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A randomly generated unique ID that all Segments related to each other must use (128 bits)."}),"00000000000000000110100100100100":new S({name:"ChapterTranslate           ",level:"2 ",id:"00006924",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A tuple of corresponding ID used by chapter codecs to represent this Segment."}),"00000000000000000110100111111100":new S({name:"ChapterTranslateEditionUID ",level:"3 ",id:"000069fc",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specify an edition UID on which this correspondance applies. When not specified, it means for all editions found in the Segment."}),"00000000000000000110100110111111":new S({name:"ChapterTranslateCodec      ",level:"3 ",id:"000069bf",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The chapter codec using this ID (0: Matroska Script, 1: DVD-menu)."}),"00000000000000000110100110100101":new S({name:"ChapterTranslateID         ",level:"3 ",id:"000069a5",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The binary value used to represent this Segment in the chapter codec data. The format depends on the ChapProcessCodecID used."}),"00000000001010101101011110110001":new S({name:"TimecodeScale              ",level:"2 ",id:"002ad7b1",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"1000000                       ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Timestamp scale in nanoseconds (1.000.000 means all timestamps in the Segment are expressed in milliseconds)."}),"00000000000000000100010010001001":new S({name:"Duration                   ",level:"2 ",id:"00004489",mandatory:"-    ",multiple:"-    ",range:"> 0       ",default:"-                             ",type:"f",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Duration of the Segment (based on TimecodeScale)."}),"00000000000000000100010001100001":new S({name:"DateUTC                    ",level:"2 ",id:"00004461",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"d",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Date of the origin of timestamp (value 0), i.e. production date."}),"00000000000000000111101110101001":new S({name:"Title                      ",level:"2 ",id:"00007ba9",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"General name of the Segment."}),"00000000000000000100110110000000":new S({name:"MuxingApp                  ",level:"2 ",id:"00004d80",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:'Muxing application or library ("libmatroska-0.4.3").'}),"00000000000000000101011101000001":new S({name:"WritingApp                 ",level:"2 ",id:"00005741",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:'Writing application ("mkvmerge-0.3.3").'}),"00011111010000111011011001110101":new S({name:"Cluster                    ",level:"1 ",id:"1f43b675",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The Top-Level Element containing the (monolithic) Block structure."}),"00000000000000000000000011100111":new S({name:"Timecode                   ",level:"2 ",id:"000000e7",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Absolute timestamp of the cluster (based on TimecodeScale)."}),"00000000000000000101100001010100":new S({name:"SilentTracks               ",level:"2 ",id:"00005854",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The list of tracks that are not used in that part of the stream. It is useful when using overlay tracks on seeking. Then you should decide what track to use."}),"00000000000000000101100011010111":new S({name:"SilentTrackNumber          ",level:"3 ",id:"000058d7",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"One of the track number that are not used from now on in the stream. It could change later if not specified as silent in a further Cluster."}),"00000000000000000000000010100111":new S({name:"Position                   ",level:"2 ",id:"000000a7",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The Position of the Cluster in the Segment (0 in live broadcast streams). It might help to resynchronise offset on damaged streams."}),"00000000000000000000000010101011":new S({name:"PrevSize                   ",level:"2 ",id:"000000ab",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Size of the previous Cluster, in octets. Can be useful for backward playing."}),"00000000000000000000000010100011":new S({name:"SimpleBlock                ",level:"2 ",id:"000000a3",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"b",webm:"*",v1:"-",v2:"*",v3:"*",v4:"*",description:"Similar to Block but without all the extra information, mostly used to reduced overhead when no extra feature is needed. (see SimpleBlock Structure)"}),"00000000000000000000000010100000":new S({name:"BlockGroup                 ",level:"2 ",id:"000000a0",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Basic container of information containing a single Block or BlockVirtual, and information specific to that Block/VirtualBlock."}),"00000000000000000000000010100001":new S({name:"Block                      ",level:"3 ",id:"000000a1",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Block containing the actual data to be rendered and a timestamp relative to the Cluster Timecode. (see Block Structure)"}),"00000000000000000000000010100010":new S({name:"BlockVirtual               ",level:"3 ",id:"000000a2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A Block with no data. It must be stored in the stream at the place the real Block should be in display order. (see Block Virtual)"}),"00000000000000000111010110100001":new S({name:"BlockAdditions             ",level:"3 ",id:"000075a1",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contain additional blocks to complete the main one. An EBML parser that has no knowledge of the Block structure could still see and use/skip these data."}),"00000000000000000000000010100110":new S({name:"BlockMore                  ",level:"4 ",id:"000000a6",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contain the BlockAdditional and some parameters."}),"00000000000000000000000011101110":new S({name:"BlockAddID                 ",level:"5 ",id:"000000ee",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"1                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"An ID to identify the BlockAdditional level."}),"00000000000000000000000010100101":new S({name:"BlockAdditional            ",level:"5 ",id:"000000a5",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Interpreted by the codec as it wishes (using the BlockAddID)."}),"00000000000000000000000010011011":new S({name:"BlockDuration              ",level:"3 ",id:"0000009b",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"DefaultDuration               ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:'The duration of the Block (based on TimecodeScale). This Element is mandatory when DefaultDuration is set for the track (but can be omitted as other default values). When not written and with no DefaultDuration, the value is assumed to be the difference between the timestamp of this Block and the timestamp of the next Block in "display" order (not coding order). This Element can be useful at the end of a Track (as there is not other Block available), or when there is a break in a track like for subtitle tracks. When set to 0 that means the frame is not a keyframe.'}),"00000000000000000000000011111010":new S({name:"ReferencePriority          ",level:"3 ",id:"000000fa",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"This frame is referenced and has the specified cache priority. In cache only a frame of the same or higher priority can replace this frame. A value of 0 means the frame is not referenced."}),"00000000000000000000000011111011":new S({name:"ReferenceBlock             ",level:"3 ",id:"000000fb",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"i",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Timestamp of another frame used as a reference (ie: B or P frame). The timestamp is relative to the block it's attached to."}),"00000000000000000000000011111101":new S({name:"ReferenceVirtual           ",level:"3 ",id:"000000fd",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"i",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Relative position of the data that should be in position of the virtual block."}),"00000000000000000000000010100100":new S({name:"CodecState                 ",level:"3 ",id:"000000a4",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"*",v3:"*",v4:"*",description:"The new codec state to use. Data interpretation is private to the codec. This information should always be referenced by a seek entry."}),"00000000000000000111010110100010":new S({name:"DiscardPadding             ",level:"3 ",id:"000075a2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"i",webm:"*",v1:"-",v2:"-",v3:"-",v4:"*",description:"Duration in nanoseconds of the silent data added to the Block (padding at the end of the Block for positive value, at the beginning of the Block for negative value). The duration of DiscardPadding is not calculated in the duration of the TrackEntry and should be discarded during playback."}),"00000000000000000000000010001110":new S({name:"Slices                     ",level:"3 ",id:"0000008e",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains slices description."}),"00000000000000000000000011101000":new S({name:"TimeSlice                  ",level:"4 ",id:"000000e8",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains extra time information about the data contained in the Block. While there are a few files in the wild with this Element, it is no longer in use and has been deprecated. Being able to interpret this Element is not required for playback."}),"00000000000000000000000011001100":new S({name:"LaceNumber                 ",level:"5 ",id:"000000cc",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The reverse number of the frame in the lace (0 is the last frame, 1 is the next to last, etc). While there are a few files in the wild with this Element, it is no longer in use and has been deprecated. Being able to interpret this Element is not required for playback."}),"00000000000000000000000011001101":new S({name:"FrameNumber                ",level:"5 ",id:"000000cd",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The number of the frame to generate from this lace with this delay (allow you to generate many frames from the same Block/Frame)."}),"00000000000000000000000011001011":new S({name:"BlockAdditionID            ",level:"5 ",id:"000000cb",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The ID of the BlockAdditional Element (0 is the main Block)."}),"00000000000000000000000011001110":new S({name:"Delay                      ",level:"5 ",id:"000000ce",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The (scaled) delay to apply to the Element."}),"00000000000000000000000011001111":new S({name:"SliceDuration              ",level:"5 ",id:"000000cf",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The (scaled) duration to apply to the Element."}),"00000000000000000000000011001000":new S({name:"ReferenceFrame             ",level:"3 ",id:"000000c8",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000011001001":new S({name:"ReferenceOffset            ",level:"4 ",id:"000000c9",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000011001010":new S({name:"ReferenceTimeCode          ",level:"4 ",id:"000000ca",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000010101111":new S({name:"EncryptedBlock             ",level:"2 ",id:"000000af",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Similar to SimpleBlock but the data inside the Block are Transformed (encrypt and/or signed). (see EncryptedBlock Structure)"}),"00010110010101001010111001101011":new S({name:"Tracks                     ",level:"1 ",id:"1654ae6b",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A Top-Level Element of information with many tracks described."}),"00000000000000000000000010101110":new S({name:"TrackEntry                 ",level:"2 ",id:"000000ae",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Describes a track with all Elements."}),"00000000000000000000000011010111":new S({name:"TrackNumber                ",level:"3 ",id:"000000d7",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The track number as used in the Block Header (using more than 127 tracks is not encouraged, though the design allows an unlimited number)."}),"00000000000000000111001111000101":new S({name:"TrackUID                   ",level:"3 ",id:"000073c5",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the Track. This should be kept the same when making a direct stream copy of the Track to another file."}),"00000000000000000000000010000011":new S({name:"TrackType                  ",level:"3 ",id:"00000083",mandatory:"mand.",multiple:"-    ",range:"1-254     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A set of track types coded on 8 bits (1: video, 2: audio, 3: complex, 0x10: logo, 0x11: subtitle, 0x12: buttons, 0x20: control)."}),"00000000000000000000000010111001":new S({name:"FlagEnabled                ",level:"3 ",id:"000000b9",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"1                             ",type:"u",webm:"*",v1:"-",v2:"*",v3:"*",v4:"*",description:"Set if the track is usable. (1 bit)"}),"00000000000000000000000010001000":new S({name:"FlagDefault                ",level:"3 ",id:"00000088",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Set if that track (audio, video or subs) SHOULD be active if no language found matches the user preference. (1 bit)"}),"00000000000000000101010110101010":new S({name:"FlagForced                 ",level:"3 ",id:"000055aa",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Set if that track MUST be active during playback. There can be many forced track for a kind (audio, video or subs), the player should select the one which language matches the user preference or the default + forced track. Overlay MAY happen between a forced and non-forced track of the same kind. (1 bit)"}),"00000000000000000000000010011100":new S({name:"FlagLacing                 ",level:"3 ",id:"0000009c",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Set if the track may contain blocks using lacing. (1 bit)"}),"00000000000000000110110111100111":new S({name:"MinCache                   ",level:"3 ",id:"00006de7",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The minimum number of frames a player should be able to cache during playback. If set to 0, the reference pseudo-cache system is not used."}),"00000000000000000110110111111000":new S({name:"MaxCache                   ",level:"3 ",id:"00006df8",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The maximum cache size required to store referenced frames in and the current frame. 0 means no cache is needed."}),"00000000001000111110001110000011":new S({name:"DefaultDuration            ",level:"3 ",id:"0023e383",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Number of nanoseconds (not scaled via TimecodeScale) per frame ('frame' in the Matroska sense -- one Element put into a (Simple)Block)."}),"00000000001000110100111001111010":new S({name:"DefaultDecodedFieldDuration",level:"3 ",id:"00234e7a",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The period in nanoseconds (not scaled by TimcodeScale) between two successive fields at the output of the decoding process (see the notes)"}),"00000000001000110011000101001111":new S({name:"TrackTimecodeScale         ",level:"3 ",id:"0023314f",mandatory:"mand.",multiple:"-    ",range:"> 0       ",default:"1.0                           ",type:"f",webm:"-",v1:"*",v2:"*",v3:"*",v4:"-",description:"DEPRECATED, DO NOT USE. The scale to apply on this track to work at normal speed in relation with other tracks (mostly used to adjust video speed when the audio length differs)."}),"00000000000000000101001101111111":new S({name:"TrackOffset                ",level:"3 ",id:"0000537f",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"i",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A value to add to the Block's Timestamp. This can be used to adjust the playback offset of a track."}),"00000000000000000101010111101110":new S({name:"MaxBlockAdditionID         ",level:"3 ",id:"000055ee",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The maximum value of BlockAddID. A value 0 means there is no BlockAdditions for this track."}),"00000000000000000101001101101110":new S({name:"Name                       ",level:"3 ",id:"0000536e",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A human-readable track name."}),"00000000001000101011010110011100":new S({name:"Language                   ",level:"3 ",id:"0022b59c",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"eng                           ",type:"s",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specifies the language of the track in the Matroska languages form."}),"00000000000000000000000010000110":new S({name:"CodecID                    ",level:"3 ",id:"00000086",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"s",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"An ID corresponding to the codec, see the codec page for more info."}),"00000000000000000110001110100010":new S({name:"CodecPrivate               ",level:"3 ",id:"000063a2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Private data only known to the codec."}),"00000000001001011000011010001000":new S({name:"CodecName                  ",level:"3 ",id:"00258688",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A human-readable string specifying the codec."}),"00000000000000000111010001000110":new S({name:"AttachmentLink             ",level:"3 ",id:"00007446",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The UID of an attachment that is used by this codec."}),"00000000001110101001011010010111":new S({name:"CodecSettings              ",level:"3 ",id:"003a9697",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A string describing the encoding setting used."}),"00000000001110110100000001000000":new S({name:"CodecInfoURL               ",level:"3 ",id:"003b4040",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"s",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A URL to find information about the codec used."}),"00000000001001101011001001000000":new S({name:"CodecDownloadURL           ",level:"3 ",id:"0026b240",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"s",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A URL to download about the codec used."}),"00000000000000000000000010101010":new S({name:"CodecDecodeAll             ",level:"3 ",id:"000000aa",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"1                             ",type:"u",webm:"-",v1:"-",v2:"*",v3:"*",v4:"*",description:"The codec can decode potentially damaged data (1 bit)."}),"00000000000000000110111110101011":new S({name:"TrackOverlay               ",level:"3 ",id:"00006fab",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specify that this track is an overlay track for the Track specified (in the u-integer). That means when this track has a gap (see SilentTracks) the overlay track should be used instead. The order of multiple TrackOverlay matters, the first one is the one that should be used. If not found it should be the second, etc."}),"00000000000000000101011010101010":new S({name:"CodecDelay                 ",level:"3 ",id:"000056aa",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"-",v2:"-",v3:"-",v4:"*",description:"CodecDelay is The codec-built-in delay in nanoseconds. This value must be subtracted from each block timestamp in order to get the actual timestamp. The value should be small so the muxing of tracks with the same actual timestamp are in the same Cluster."}),"00000000000000000101011010111011":new S({name:"SeekPreRoll                ",level:"3 ",id:"000056bb",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"-",v2:"-",v3:"-",v4:"*",description:"After a discontinuity, SeekPreRoll is the duration in nanoseconds of the data the decoder must decode before the decoded data is valid."}),"00000000000000000110011000100100":new S({name:"TrackTranslate             ",level:"3 ",id:"00006624",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The track identification for the given Chapter Codec."}),"00000000000000000110011011111100":new S({name:"TrackTranslateEditionUID   ",level:"4 ",id:"000066fc",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specify an edition UID on which this translation applies. When not specified, it means for all editions found in the Segment."}),"00000000000000000110011010111111":new S({name:"TrackTranslateCodec        ",level:"4 ",id:"000066bf",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The chapter codec using this ID (0: Matroska Script, 1: DVD-menu)."}),"00000000000000000110011010100101":new S({name:"TrackTranslateTrackID      ",level:"4 ",id:"000066a5",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The binary value used to represent this track in the chapter codec data. The format depends on the ChapProcessCodecID used."}),"00000000000000000000000011100000":new S({name:"Video                      ",level:"3 ",id:"000000e0",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Video settings."}),"00000000000000000000000010011010":new S({name:"FlagInterlaced             ",level:"4 ",id:"0000009a",mandatory:"mand.",multiple:"-    ",range:"0-2       ",default:"0                             ",type:"u",webm:"*",v1:"-",v2:"*",v3:"*",v4:"*",description:"A flag to declare is the video is known to be progressive or interlaced and if applicable to declare details about the interlacement. (0: undetermined, 1: interlaced, 2: progressive)"}),"00000000000000000000000010011101":new S({name:"FieldOrder                 ",level:"4 ",id:"0000009d",mandatory:"mand.",multiple:"-    ",range:"0-14      ",default:"2                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Declare the field ordering of the video. If FlagInterlaced is not set to 1, this Element MUST be ignored. (0: Progressive, 1: Interlaced with top field display first and top field stored first, 2: Undetermined field order, 6: Interlaced with bottom field displayed first and bottom field stored first, 9: Interlaced with bottom field displayed first and top field stored first, 14: Interlaced with top field displayed first and bottom field stored first)"}),"00000000000000000101001110111000":new S({name:"StereoMode                 ",level:"4 ",id:"000053b8",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"-",v2:"-",v3:"*",v4:"*",description:"Stereo-3D video mode (0: mono, 1: side by side (left eye is first), 2: top-bottom (right eye is first), 3: top-bottom (left eye is first), 4: checkboard (right is first), 5: checkboard (left is first), 6: row interleaved (right is first), 7: row interleaved (left is first), 8: column interleaved (right is first), 9: column interleaved (left is first), 10: anaglyph (cyan/red), 11: side by side (right eye is first), 12: anaglyph (green/magenta), 13 both eyes laced in one Block (left eye is first), 14 both eyes laced in one Block (right eye is first)) . There are some more details on 3D support in the Specification Notes."}),"00000000000000000101001111000000":new S({name:"AlphaMode                  ",level:"4 ",id:"000053c0",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"-",v2:"-",v3:"*",v4:"*",description:"Alpha Video Mode. Presence of this Element indicates that the BlockAdditional Element could contain Alpha data."}),"00000000000000000101001110111001":new S({name:"OldStereoMode              ",level:"4 ",id:"000053b9",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DEPRECATED, DO NOT USE. Bogus StereoMode value used in old versions of libmatroska. (0: mono, 1: right eye, 2: left eye, 3: both eyes)."}),"00000000000000000000000010110000":new S({name:"PixelWidth                 ",level:"4 ",id:"000000b0",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Width of the encoded video frames in pixels."}),"00000000000000000000000010111010":new S({name:"PixelHeight                ",level:"4 ",id:"000000ba",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Height of the encoded video frames in pixels."}),"00000000000000000101010010101010":new S({name:"PixelCropBottom            ",level:"4 ",id:"000054aa",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The number of video pixels to remove at the bottom of the image (for HDTV content)."}),"00000000000000000101010010111011":new S({name:"PixelCropTop               ",level:"4 ",id:"000054bb",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The number of video pixels to remove at the top of the image."}),"00000000000000000101010011001100":new S({name:"PixelCropLeft              ",level:"4 ",id:"000054cc",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The number of video pixels to remove on the left of the image."}),"00000000000000000101010011011101":new S({name:"PixelCropRight             ",level:"4 ",id:"000054dd",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The number of video pixels to remove on the right of the image."}),"00000000000000000101010010110000":new S({name:"DisplayWidth               ",level:"4 ",id:"000054b0",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"PixelWidth- PixelCropLeft - Pi",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Width of the video frames to display. Applies to the video frame after cropping (PixelCrop* Elements). The default value is only valid when DisplayUnit is 0."}),"00000000000000000101010010111010":new S({name:"DisplayHeight              ",level:"4 ",id:"000054ba",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"PixelHeight- PixelCropTop - Pi",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Height of the video frames to display. Applies to the video frame after cropping (PixelCrop* Elements). The default value is only valid when DisplayUnit is 0."}),"00000000000000000101010010110010":new S({name:"DisplayUnit                ",level:"4 ",id:"000054b2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"How DisplayWidth & DisplayHeight should be interpreted (0: pixels, 1: centimeters, 2: inches, 3: Display Aspect Ratio)."}),"00000000000000000101010010110011":new S({name:"AspectRatioType            ",level:"4 ",id:"000054b3",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specify the possible modifications to the aspect ratio (0: free resizing, 1: keep aspect ratio, 2: fixed)."}),"00000000001011101011010100100100":new S({name:"ColourSpace                ",level:"4 ",id:"002eb524",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Same value as in AVI (32 bits)."}),"00000000001011111011010100100011":new S({name:"GammaValue                 ",level:"4 ",id:"002fb523",mandatory:"-    ",multiple:"-    ",range:"> 0       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Gamma Value."}),"00000000001000111000001111100011":new S({name:"FrameRate                  ",level:"4 ",id:"002383e3",mandatory:"-    ",multiple:"-    ",range:"> 0       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Number of frames per second. Informational only."}),"00000000000000000101010110110000":new S({name:"Colour                     ",level:"4 ",id:"000055b0",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Settings describing the colour format."}),"00000000000000000101010110110001":new S({name:"MatrixCoefficients         ",level:"5 ",id:"000055b1",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"2                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The Matrix Coefficients of the video used to derive luma and chroma values from reg, green, and blue color primaries. For clarity, the value and meanings for MatrixCoefficients are adopted from Table 4 of ISO/IEC 23001-8:2013/DCOR1. (0:GBR, 1: BT709, 2: Unspecified, 3: Reserved, 4: FCC, 5: BT470BG, 6: SMPTE 170M, 7: SMPTE 240M, 8: YCOCG, 9: BT2020 Non-constant Luminance, 10: BT2020 Constant Luminance)"}),"00000000000000000101010110110010":new S({name:"BitsPerChannel             ",level:"5 ",id:"000055b2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Number of decoded bits per channel. A value of 0 indicates that the BitsPerChannel is unspecified."}),"00000000000000000101010110110011":new S({name:"ChromaSubsamplingHorz      ",level:"5 ",id:"000055b3",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The amount of pixels to remove in the Cr and Cb channels for every pixel not removed horizontally. Example: For video with 4:2:0 chroma subsampling, the ChromaSubsamplingHorz should be set to 1."}),"00000000000000000101010110110100":new S({name:"ChromaSubsamplingVert      ",level:"5 ",id:"000055b4",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The amount of pixels to remove in the Cr and Cb channels for every pixel not removed vertically. Example: For video with 4:2:0 chroma subsampling, the ChromaSubsamplingVert should be set to 1."}),"00000000000000000101010110110101":new S({name:"CbSubsamplingHorz          ",level:"5 ",id:"000055b5",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The amount of pixels to remove in the Cb channel for every pixel not removed horizontally. This is additive with ChromaSubsamplingHorz. Example: For video with 4:2:1 chroma subsampling, the ChromaSubsamplingHorz should be set to 1 and CbSubsamplingHorz should be set to 1."}),"00000000000000000101010110110110":new S({name:"CbSubsamplingVert          ",level:"5 ",id:"000055b6",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The amount of pixels to remove in the Cb channel for every pixel not removed vertically. This is additive with ChromaSubsamplingVert."}),"00000000000000000101010110110111":new S({name:"ChromaSitingHorz           ",level:"5 ",id:"000055b7",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"How chroma is subsampled horizontally. (0: Unspecified, 1: Left Collocated, 2: Half)"}),"00000000000000000101010110111000":new S({name:"ChromaSitingVert           ",level:"5 ",id:"000055b8",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"How chroma is subsampled vertically. (0: Unspecified, 1: Top Collocated, 2: Half)"}),"00000000000000000101010110111001":new S({name:"Range                      ",level:"5 ",id:"000055b9",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Clipping of the color ranges. (0: Unspecified, 1: Broadcast Range, 2: Full range (no clipping), 3: Defined by MatrixCoefficients/TransferCharacteristics)"}),"00000000000000000101010110111010":new S({name:"TransferCharacteristics    ",level:"5 ",id:"000055ba",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"2                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The transfer characteristics of the video. For clarity, the value and meanings for TransferCharacteristics 1-15 are adopted from Table 3 of ISO/IEC 23001-8:2013/DCOR1. TransferCharacteristics 16-18 are proposed values. (0: Reserved, 1: ITU-R BT.709, 2: Unspecified, 3: Reserved, 4: Gamma 2.2 curve, 5: Gamma 2.8 curve, 6: SMPTE 170M, 7: SMPTE 240M, 8: Linear, 9: Log, 10: Log Sqrt, 11: IEC 61966-2-4, 12: ITU-R BT.1361 Extended Colour Gamut, 13: IEC 61966-2-1, 14: ITU-R BT.2020 10 bit, 15: ITU-R BT.2020 12 bit, 16: SMPTE ST 2084, 17: SMPTE ST 428-1 18: ARIB STD-B67 (HLG))"}),"00000000000000000101010110111011":new S({name:"Primaries                  ",level:"5 ",id:"000055bb",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"2                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The colour primaries of the video. For clarity, the value and meanings for Primaries are adopted from Table 2 of ISO/IEC 23001-8:2013/DCOR1. (0: Reserved, 1: ITU-R BT.709, 2: Unspecified, 3: Reserved, 4: ITU-R BT.470M, 5: ITU-R BT.470BG, 6: SMPTE 170M, 7: SMPTE 240M, 8: FILM, 9: ITU-R BT.2020, 10: SMPTE ST 428-1, 22: JEDEC P22 phosphors)"}),"00000000000000000101010110111100":new S({name:"MaxCLL                     ",level:"5 ",id:"000055bc",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Maximum brightness of a single pixel (Maximum Content Light Level) in candelas per square meter (cd/m²)."}),"00000000000000000101010110111101":new S({name:"MaxFALL                    ",level:"5 ",id:"000055bd",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Maximum brightness of a single full frame (Maximum Frame-Average Light Level) in candelas per square meter (cd/m²)."}),"00000000000000000101010111010000":new S({name:"MasteringMetadata          ",level:"5 ",id:"000055d0",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"SMPTE 2086 mastering data."}),"00000000000000000101010111010001":new S({name:"PrimaryRChromaticityX      ",level:"6 ",id:"000055d1",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Red X chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111010010":new S({name:"PrimaryRChromaticityY      ",level:"6 ",id:"000055d2",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Red Y chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111010011":new S({name:"PrimaryGChromaticityX      ",level:"6 ",id:"000055d3",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Green X chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111010100":new S({name:"PrimaryGChromaticityY      ",level:"6 ",id:"000055d4",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Green Y chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111010101":new S({name:"PrimaryBChromaticityX      ",level:"6 ",id:"000055d5",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Blue X chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111010110":new S({name:"PrimaryBChromaticityY      ",level:"6 ",id:"000055d6",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Blue Y chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111010111":new S({name:"WhitePointChromaticityX    ",level:"6 ",id:"000055d7",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"White X chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111011000":new S({name:"WhitePointChromaticityY    ",level:"6 ",id:"000055d8",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"White Y chromaticity coordinate as defined by CIE 1931."}),"00000000000000000101010111011001":new S({name:"LuminanceMax               ",level:"6 ",id:"000055d9",mandatory:"-    ",multiple:"-    ",range:"0-9999.99 ",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Maximum luminance. Shall be represented in candelas per square meter (cd/m²)."}),"00000000000000000101010111011010":new S({name:"LuminanceMin               ",level:"6 ",id:"000055da",mandatory:"-    ",multiple:"-    ",range:"0-999.9999",default:"-                             ",type:"f",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"Mininum luminance. Shall be represented in candelas per square meter (cd/m²)."}),"00000000000000000000000011100001":new S({name:"Audio                      ",level:"3 ",id:"000000e1",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Audio settings."}),"00000000000000000000000010110101":new S({name:"SamplingFrequency          ",level:"4 ",id:"000000b5",mandatory:"mand.",multiple:"-    ",range:"> 0       ",default:"8000.0                        ",type:"f",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Sampling frequency in Hz."}),"00000000000000000111100010110101":new S({name:"OutputSamplingFrequency    ",level:"4 ",id:"000078b5",mandatory:"-    ",multiple:"-    ",range:"> 0       ",default:"-amplingFrequency             ",type:"f",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Real output sampling frequency in Hz (used for SBR techniques)."}),"00000000000000000000000010011111":new S({name:"Channels                   ",level:"4 ",id:"0000009f",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Numbers of channels in the track."}),"00000000000000000111110101111011":new S({name:"ChannelPositions           ",level:"4 ",id:"00007d7b",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Table of horizontal angles for each successive channel, see appendix."}),"00000000000000000110001001100100":new S({name:"BitDepth                   ",level:"4 ",id:"00006264",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Bits per sample, mostly used for PCM."}),"00000000000000000000000011100010":new S({name:"TrackOperation             ",level:"3 ",id:"000000e2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"Operation that needs to be applied on tracks to create this virtual track. For more details look at the Specification Notes on the subject."}),"00000000000000000000000011100011":new S({name:"TrackCombinePlanes         ",level:"4 ",id:"000000e3",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"Contains the list of all video plane tracks that need to be combined to create this 3D track"}),"00000000000000000000000011100100":new S({name:"TrackPlane                 ",level:"5 ",id:"000000e4",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"Contains a video plane track that need to be combined to create this 3D track"}),"00000000000000000000000011100101":new S({name:"TrackPlaneUID              ",level:"6 ",id:"000000e5",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"The trackUID number of the track representing the plane."}),"00000000000000000000000011100110":new S({name:"TrackPlaneType             ",level:"6 ",id:"000000e6",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"The kind of plane this track corresponds to (0: left eye, 1: right eye, 2: background)."}),"00000000000000000000000011101001":new S({name:"TrackJoinBlocks            ",level:"4 ",id:"000000e9",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"Contains the list of all tracks whose Blocks need to be combined to create this virtual track"}),"00000000000000000000000011101101":new S({name:"TrackJoinUID               ",level:"5 ",id:"000000ed",mandatory:"mand.",multiple:"mult.",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"*",v4:"*",description:"The trackUID number of a track whose blocks are used to create this virtual track."}),"00000000000000000000000011000000":new S({name:"TrickTrackUID              ",level:"3 ",id:"000000c0",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000011000001":new S({name:"TrickTrackSegmentUID       ",level:"3 ",id:"000000c1",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000011000110":new S({name:"TrickTrackFlag             ",level:"3 ",id:"000000c6",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000011000111":new S({name:"TrickMasterTrackUID        ",level:"3 ",id:"000000c7",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000000000011000100":new S({name:"TrickMasterTrackSegmentUID ",level:"3 ",id:"000000c4",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX trick track extenstions"}),"00000000000000000110110110000000":new S({name:"ContentEncodings           ",level:"3 ",id:"00006d80",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Settings for several content encoding mechanisms like compression or encryption."}),"00000000000000000110001001000000":new S({name:"ContentEncoding            ",level:"4 ",id:"00006240",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Settings for one content encoding like compression or encryption."}),"00000000000000000101000000110001":new S({name:"ContentEncodingOrder       ",level:"5 ",id:"00005031",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Tells when this modification was used during encoding/muxing starting with 0 and counting upwards. The decoder/demuxer has to start with the highest order number it finds and work its way down. This value has to be unique over all ContentEncodingOrder Elements in the Segment."}),"00000000000000000101000000110010":new S({name:"ContentEncodingScope       ",level:"5 ",id:"00005032",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"1                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A bit field that describes which Elements have been modified in this way. Values (big endian) can be OR'ed. Possible values:\n1 - all frame contents,\n2 - the track's private data,\n4 - the next ContentEncoding (next ContentEncodingOrder. Either the data inside ContentCompression and/or ContentEncryption)"}),"00000000000000000101000000110011":new S({name:"ContentEncodingType        ",level:"5 ",id:"00005033",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A value describing what kind of transformation has been done. Possible values:\n0 - compression,\n1 - encryption"}),"00000000000000000101000000110100":new S({name:"ContentCompression         ",level:"5 ",id:"00005034",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Settings describing the compression used. Must be present if the value of ContentEncodingType is 0 and absent otherwise. Each block must be decompressable even if no previous block is available in order not to prevent seeking."}),"00000000000000000100001001010100":new S({name:"ContentCompAlgo            ",level:"6 ",id:"00004254",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The compression algorithm used. Algorithms that have been specified so far are:\n0 - zlib,\n1 - bzlib,\n2 - lzo1x\n3 - Header Stripping"}),"00000000000000000100001001010101":new S({name:"ContentCompSettings        ",level:"6 ",id:"00004255",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Settings that might be needed by the decompressor. For Header Stripping (ContentCompAlgo=3), the bytes that were removed from the beggining of each frames of the track."}),"00000000000000000101000000110101":new S({name:"ContentEncryption          ",level:"5 ",id:"00005035",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Settings describing the encryption used. Must be present if the value of ContentEncodingType is 1 and absent otherwise."}),"00000000000000000100011111100001":new S({name:"ContentEncAlgo             ",level:"6 ",id:"000047e1",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The encryption algorithm used. The value '0' means that the contents have not been encrypted but only signed. Predefined values:\n1 - DES, 2 - 3DES, 3 - Twofish, 4 - Blowfish, 5 - AES"}),"00000000000000000100011111100010":new S({name:"ContentEncKeyID            ",level:"6 ",id:"000047e2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"For public key algorithms this is the ID of the public key the the data was encrypted with."}),"00000000000000000100011111100011":new S({name:"ContentSignature           ",level:"6 ",id:"000047e3",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A cryptographic signature of the contents."}),"00000000000000000100011111100100":new S({name:"ContentSigKeyID            ",level:"6 ",id:"000047e4",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"This is the ID of the private key the data was signed with."}),"00000000000000000100011111100101":new S({name:"ContentSigAlgo             ",level:"6 ",id:"000047e5",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values:\n1 - RSA"}),"00000000000000000100011111100110":new S({name:"ContentSigHashAlgo         ",level:"6 ",id:"000047e6",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The hash algorithm used for the signature. A value of '0' means that the contents have not been signed but only encrypted. Predefined values:\n1 - SHA1-160\n2 - MD5"}),"00011100010100111011101101101011":new S({name:"Cues                       ",level:"1 ",id:"1c53bb6b",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:'A Top-Level Element to speed seeking access. All entries are local to the Segment. Should be mandatory for non "live" streams.'}),"00000000000000000000000010111011":new S({name:"CuePoint                   ",level:"2 ",id:"000000bb",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains all information relative to a seek point in the Segment."}),"00000000000000000000000010110011":new S({name:"CueTime                    ",level:"3 ",id:"000000b3",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Absolute timestamp according to the Segment time base."}),"00000000000000000000000010110111":new S({name:"CueTrackPositions          ",level:"3 ",id:"000000b7",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contain positions for different tracks corresponding to the timestamp."}),"00000000000000000000000011110111":new S({name:"CueTrack                   ",level:"4 ",id:"000000f7",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The track for which a position is given."}),"00000000000000000000000011110001":new S({name:"CueClusterPosition         ",level:"4 ",id:"000000f1",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The position of the Cluster containing the required Block."}),"00000000000000000000000011110000":new S({name:"CueRelativePosition        ",level:"4 ",id:"000000f0",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The relative position of the referenced block inside the cluster with 0 being the first possible position for an Element inside that cluster."}),"00000000000000000000000010110010":new S({name:"CueDuration                ",level:"4 ",id:"000000b2",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"*",description:"The duration of the block according to the Segment time base. If missing the track's DefaultDuration does not apply and no duration information is available in terms of the cues."}),"00000000000000000101001101111000":new S({name:"CueBlockNumber             ",level:"4 ",id:"00005378",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"1                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Number of the Block in the specified Cluster."}),"00000000000000000000000011101010":new S({name:"CueCodecState              ",level:"4 ",id:"000000ea",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"*",v3:"*",v4:"*",description:"The position of the Codec State corresponding to this Cue Element. 0 means that the data is taken from the initial Track Entry."}),"00000000000000000000000011011011":new S({name:"CueReference               ",level:"4 ",id:"000000db",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"-",v2:"*",v3:"*",v4:"*",description:"The Clusters containing the required referenced Blocks."}),"00000000000000000000000010010110":new S({name:"CueRefTime                 ",level:"5 ",id:"00000096",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"*",v3:"*",v4:"*",description:"Timestamp of the referenced Block."}),"00000000000000000000000010010111":new S({name:"CueRefCluster              ",level:"5 ",id:"00000097",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The Position of the Cluster containing the referenced Block."}),"00000000000000000101001101011111":new S({name:"CueRefNumber               ",level:"5 ",id:"0000535f",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"1                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"Number of the referenced Block of Track X in the specified Cluster."}),"00000000000000000000000011101011":new S({name:"CueRefCodecState           ",level:"5 ",id:"000000eb",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"The position of the Codec State corresponding to this referenced Element. 0 means that the data is taken from the initial Track Entry."}),"00011001010000011010010001101001":new S({name:"Attachments                ",level:"1 ",id:"1941a469",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contain attached files."}),"00000000000000000110000110100111":new S({name:"AttachedFile               ",level:"2 ",id:"000061a7",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"An attached file."}),"00000000000000000100011001111110":new S({name:"FileDescription            ",level:"3 ",id:"0000467e",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A human-friendly name for the attached file."}),"00000000000000000100011001101110":new S({name:"FileName                   ",level:"3 ",id:"0000466e",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Filename of the attached file."}),"00000000000000000100011001100000":new S({name:"FileMimeType               ",level:"3 ",id:"00004660",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"s",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"MIME type of the file."}),"00000000000000000100011001011100":new S({name:"FileData                   ",level:"3 ",id:"0000465c",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The data of the file."}),"00000000000000000100011010101110":new S({name:"FileUID                    ",level:"3 ",id:"000046ae",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Unique ID representing the file, as random as possible."}),"00000000000000000100011001110101":new S({name:"FileReferral               ",level:"3 ",id:"00004675",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"A binary value that a track/codec can refer to when the attachment is needed."}),"00000000000000000100011001100001":new S({name:"FileUsedStartTime          ",level:"3 ",id:"00004661",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX font extension"}),"00000000000000000100011001100010":new S({name:"FileUsedEndTime            ",level:"3 ",id:"00004662",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"-",v2:"-",v3:"-",v4:"-",description:"DivX font extension"}),"00010000010000111010011101110000":new S({name:"Chapters                   ",level:"1 ",id:"1043a770",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A system to define basic menus and partition data. For more detailed information, look at the Chapters Explanation."}),"00000000000000000100010110111001":new S({name:"EditionEntry               ",level:"2 ",id:"000045b9",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains all information about a Segment edition."}),"00000000000000000100010110111100":new S({name:"EditionUID                 ",level:"3 ",id:"000045bc",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the edition. It's useful for tagging an edition."}),"00000000000000000100010110111101":new S({name:"EditionFlagHidden          ",level:"3 ",id:"000045bd",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"If an edition is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)"}),"00000000000000000100010111011011":new S({name:"EditionFlagDefault         ",level:"3 ",id:"000045db",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"If a flag is set (1) the edition should be used as the default one. (1 bit)"}),"00000000000000000100010111011101":new S({name:"EditionFlagOrdered         ",level:"3 ",id:"000045dd",mandatory:"-    ",multiple:"-    ",range:"0-1       ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specify if the chapters can be defined multiple times and the order to play them is enforced. (1 bit)"}),"00000000000000000000000010110110":new S({name:"ChapterAtom                ",level:"3+",id:"000000b6",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains the atom information to use as the chapter atom (apply to all tracks)."}),"00000000000000000111001111000100":new S({name:"ChapterUID                 ",level:"4 ",id:"000073c4",mandatory:"mand.",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the Chapter."}),"00000000000000000101011001010100":new S({name:"ChapterStringUID           ",level:"4 ",id:"00005654",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"*",v1:"-",v2:"-",v3:"*",v4:"*",description:"A unique string ID to identify the Chapter. Use for WebVTT cue identifier storage."}),"00000000000000000000000010010001":new S({name:"ChapterTimeStart           ",level:"4 ",id:"00000091",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Timestamp of the start of Chapter (not scaled)."}),"00000000000000000000000010010010":new S({name:"ChapterTimeEnd             ",level:"4 ",id:"00000092",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Timestamp of the end of Chapter (timestamp excluded, not scaled)."}),"00000000000000000000000010011000":new S({name:"ChapterFlagHidden          ",level:"4 ",id:"00000098",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"If a chapter is hidden (1), it should not be available to the user interface (but still to Control Tracks; see flag notes). (1 bit)"}),"00000000000000000100010110011000":new S({name:"ChapterFlagEnabled         ",level:"4 ",id:"00004598",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"1                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specify wether the chapter is enabled. It can be enabled/disabled by a Control Track. When disabled, the movie should skip all the content between the TimeStart and TimeEnd of this chapter (see flag notes). (1 bit)"}),"00000000000000000110111001100111":new S({name:"ChapterSegmentUID          ",level:"4 ",id:"00006e67",mandatory:"-    ",multiple:"-    ",range:">0        ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A Segment to play in place of this chapter. Edition ChapterSegmentEditionUID should be used for this Segment, otherwise no edition is used."}),"00000000000000000110111010111100":new S({name:"ChapterSegmentEditionUID   ",level:"4 ",id:"00006ebc",mandatory:"-    ",multiple:"-    ",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The EditionUID to play from the Segment linked in ChapterSegmentUID."}),"00000000000000000110001111000011":new S({name:"ChapterPhysicalEquiv       ",level:"4 ",id:"000063c3",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:'Specify the physical equivalent of this ChapterAtom like "DVD" (60) or "SIDE" (50), see complete list of values.'}),"00000000000000000000000010001111":new S({name:"ChapterTrack               ",level:"4 ",id:"0000008f",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"List of tracks on which the chapter applies. If this Element is not present, all tracks apply"}),"00000000000000000000000010001001":new S({name:"ChapterTrackNumber         ",level:"5 ",id:"00000089",mandatory:"mand.",multiple:"mult.",range:"not 0     ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"UID of the Track to apply this chapter too. In the absence of a control track, choosing this chapter will select the listed Tracks and deselect unlisted tracks. Absence of this Element indicates that the Chapter should be applied to any currently used Tracks."}),"00000000000000000000000010000000":new S({name:"ChapterDisplay             ",level:"4 ",id:"00000080",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains all possible strings to use for the chapter display."}),"00000000000000000000000010000101":new S({name:"ChapString                 ",level:"5 ",id:"00000085",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains the string to use as the chapter atom."}),"00000000000000000100001101111100":new S({name:"ChapLanguage               ",level:"5 ",id:"0000437c",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"eng                           ",type:"s",webm:"*",v1:"*",v2:"*",v3:"*",v4:"*",description:"The languages corresponding to the string, in the bibliographic ISO-639-2 form."}),"00000000000000000100001101111110":new S({name:"ChapCountry                ",level:"5 ",id:"0000437e",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"s",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The countries corresponding to the string, same 2 octets as in Internet domains."}),"00000000000000000110100101000100":new S({name:"ChapProcess                ",level:"4 ",id:"00006944",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains all the commands associated to the Atom."}),"00000000000000000110100101010101":new S({name:"ChapProcessCodecID         ",level:"5 ",id:"00006955",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains the type of the codec used for the processing. A value of 0 means native Matroska processing (to be defined), a value of 1 means the DVD command set is used. More codec IDs can be added later."}),"00000000000000000100010100001101":new S({name:"ChapProcessPrivate         ",level:"5 ",id:"0000450d",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:'Some optional data attached to the ChapProcessCodecID information. For ChapProcessCodecID = 1, it is the "DVD level" equivalent.'}),"00000000000000000110100100010001":new S({name:"ChapProcessCommand         ",level:"5 ",id:"00006911",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains all the commands associated to the Atom."}),"00000000000000000110100100100010":new S({name:"ChapProcessTime            ",level:"6 ",id:"00006922",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Defines when the process command should be handled (0: during the whole chapter, 1: before starting playback, 2: after playback of the chapter)."}),"00000000000000000110100100110011":new S({name:"ChapProcessData            ",level:"6 ",id:"00006933",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains the command information. The data should be interpreted depending on the ChapProcessCodecID value. For ChapProcessCodecID = 1, the data correspond to the binary DVD cell pre/post commands."}),"00010010010101001100001101100111":new S({name:"Tags                       ",level:"1 ",id:"1254c367",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Element containing Elements specific to Tracks/Chapters. A list of valid tags can be found here."}),"00000000000000000111001101110011":new S({name:"Tag                        ",level:"2 ",id:"00007373",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Element containing Elements specific to Tracks/Chapters."}),"00000000000000000110001111000000":new S({name:"Targets                    ",level:"3 ",id:"000063c0",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contain all UIDs where the specified meta data apply. It is empty to describe everything in the Segment."}),"00000000000000000110100011001010":new S({name:"TargetTypeValue            ",level:"4 ",id:"000068ca",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"50                            ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A number to indicate the logical level of the target (see TargetType)."}),"00000000000000000110001111001010":new S({name:"TargetType                 ",level:"4 ",id:"000063ca",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"s",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:'An informational string that can be used to display the logical level of the target like "ALBUM", "TRACK", "MOVIE", "CHAPTER", etc (see TargetType).'}),"00000000000000000110001111000101":new S({name:"TagTrackUID                ",level:"4 ",id:"000063c5",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the Track(s) the tags belong to. If the value is 0 at this level, the tags apply to all tracks in the Segment."}),"00000000000000000110001111001001":new S({name:"TagEditionUID              ",level:"4 ",id:"000063c9",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the EditionEntry(s) the tags belong to. If the value is 0 at this level, the tags apply to all editions in the Segment."}),"00000000000000000110001111000100":new S({name:"TagChapterUID              ",level:"4 ",id:"000063c4",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the Chapter(s) the tags belong to. If the value is 0 at this level, the tags apply to all chapters in the Segment."}),"00000000000000000110001111000110":new S({name:"TagAttachmentUID           ",level:"4 ",id:"000063c6",mandatory:"-    ",multiple:"mult.",range:"-         ",default:"0                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"A unique ID to identify the Attachment(s) the tags belong to. If the value is 0 at this level, the tags apply to all the attachments in the Segment."}),"00000000000000000110011111001000":new S({name:"SimpleTag                  ",level:"3+",id:"000067c8",mandatory:"mand.",multiple:"mult.",range:"-         ",default:"-                             ",type:"m",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Contains general information about the target."}),"00000000000000000100010110100011":new S({name:"TagName                    ",level:"4 ",id:"000045a3",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The name of the Tag that is going to be stored."}),"00000000000000000100010001111010":new S({name:"TagLanguage                ",level:"4 ",id:"0000447a",mandatory:"mand.",multiple:"-    ",range:"-         ",default:"und                           ",type:"s",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Specifies the language of the tag specified, in the Matroska languages form."}),"00000000000000000100010010000100":new S({name:"TagDefault                 ",level:"4 ",id:"00004484",mandatory:"mand.",multiple:"-    ",range:"0-1       ",default:"1                             ",type:"u",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"Indication to know if this is the default/original language to use for the given tag. (1 bit)"}),"00000000000000000100010010000111":new S({name:"TagString                  ",level:"4 ",id:"00004487",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"e",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The value of the Tag."}),"00000000000000000100010010000101":new S({name:"TagBinary                  ",level:"4 ",id:"00004485",mandatory:"-    ",multiple:"-    ",range:"-         ",default:"-                             ",type:"b",webm:"-",v1:"*",v2:"*",v3:"*",v4:"*",description:"The values of the Tag if it is binary. Note that this cannot be used in the same SimpleTag as TagString."})};class E extends w{constructor(e){super(e),this.id=this.doc.specs.id(this.rawi),this.data=this.doc.specs[this.id.type](this),this.doc[this.id.toString()]||(this.doc[this.id.toString()]=[]),this.doc[this.id.toString()].push(this)}toString(){return{id:this.id,size:this.size,data:this.data}}[p.inspect.custom](){return this.toString()}}class I extends T{static id(e){return this.ids[e.toString(2).padStart(32,"0")]}static m(e,t=[]){for(e.doc.head=e.data[0];e.doc.head<e.data[1];)t.push(new E(e.doc));return t}static s(e){return e.doc.extract(e.data).reduce(e.doc.constructor.utils.toString,"")}static f(e){return e.data}static b(e){return e.data}static d(e){return e.data}static e(e){return this.s(e)}static u(e){return e.doc.extract(e.data).reduce(this.vintfull,0)}static i(e){return e.data}}I.element=E,I.ids=D;class A{constructor(e){this.line=e.line,this.onData=e.onData,this.reader=new FileReader,this.reader.onloadend=this.expose.bind(this),this.line.addEventListener("pause",this.stop.bind(this)),this.line.addEventListener("play",this.record.bind(this)),navigator.mediaDevices.getUserMedia(e.media).then(this.connect.bind(this))}expose(){this.onData(this.reader.result)}connect(e){this.stream=e,this.line.srcObject=this.stream,this.recording=new MediaRecorder(this.stream),this.recording.ondataavailable=this.save.bind(this)}record(){this.recording.start()}stop(){this.recording.stop()}save(e){this.reader.readAsArrayBuffer(e.data)}}class x{constructor(e,t){this.vertices=e,this.edges=t}static cuboid(e,t){const[a,n,i,r]=e.toRawArray(),o=v.array([[...t.add([0,0,0,0])],[...t.add([0,0,i,0])],[...t.add([0,n,0,0])],[...t.add([0,n,i,0])],[...t.add([a,0,0,0])],[...t.add([a,0,i,0])],[...t.add([a,n,0,0])],[...t.add([a,n,i,0])]]).subtract([a/2,n/2,i/2,0]),l=v.array([[0,1],[0,2],[0,4],[1,3],[1,5],[2,3],[2,6],[3,7],[4,5],[4,6],[5,7],[6,7]]);return new x(o,l)}render(e){e.context.beginPath();for(const[t,a]of this.edges)e.context.moveTo(...this.vertices.slice(t)),e.context.lineTo(...this.vertices.slice(a));e.context.stroke()}}new class{constructor(e){this.scene=e.scene,this.mic=e.mic,this.camera=e.camera,this.fileDrop=e.fileDrop,this.socket=e.socket,this.fileDrop.onData=this.addPodFromFileDrop.bind(this),this.socket.onData=this.addPodFromSocket.bind(this),this.camera.onData=this.addPodFromCamera.bind(this),this.mic.onData=this.addPodFromMic.bind(this),window.setInterval(this.render.bind(this))}addPodFromFileDrop(e){console.time("no wrap");for(const t of new Uint8Array(e))Math.exp(t+1),Math.sin(2*Math.PI*t);console.timeEnd("no wrap")}addPodFromSocket(e){console.log(e)}addPodFromCamera(e){const t=new C({bytes:new Uint8Array(e),specs:I});console.log(t.Segment)}addPodFromMic(e){console.log(e)}render(){this.scene.render()}}({socket:new class{constructor(e){this.port=e.port||3001,this.host=e.host||"localhost",this.socket=new WebSocket(`ws://${this.host}:${this.port}/`),this.socket.addEventListener("message",this.read.bind(this)),this.data=null}read(e){}onData(e){}}({port:3001,host:"localhost"}),fileDrop:new class{constructor(e){this.zone=e.zone,this.onData=e.onData,this.reader=new FileReader,this.reader.onloadend=this.expose.bind(this),this.zone.addEventListener("drop",this.read.bind(this),!1),this.zone.addEventListener("dragover",this.noop,!1)}expose(){this.onData(this.reader.result)}read(e){e.stopPropagation(),e.preventDefault(),Array.from(e.dataTransfer.files).forEach(this.reader.readAsArrayBuffer.bind(this.reader))}noop(e){e.stopPropagation(),e.preventDefault()}}({zone:document.getElementById("canvas")}),camera:new A({line:document.getElementById("video"),media:{video:!0}}),mic:new A({line:document.getElementById("audio"),media:{audio:!0}}),scene:new class{constructor(e){this.canvas=e.canvas||document.getElementById("canvas"),this.context=this.canvas.getContext("2d"),this.mouse=e.mouse||new n({scene:this,isPressed:!1}),this.keyboard=e.keyboard||new i({scene:this}),this.width=this.canvas.clientWidth,this.height=this.canvas.clientHeight,this.pods=e.pods||[],this.selectedPod=this.pods[0]}render(){this.pods[0].render(this)}}({canvas:document.getElementById("canvas"),pods:[new class{constructor(e){this.data=f.getMediaSource(e.data),this.layout=new y(e.layout),this.playback=new g(e.playback),this.display=new b(e.display),this.first=!0}rotate(e,t){const a=this.layout.shape.vertices.mean(0),n=y.translate(...a.multiply(-1)),i=y.rotate(e,t),r=y.translate(...a),o=v.dot(n,i,r),l=this.data.displayMedia.mean(0),s=y.translate(...l.multiply(-1)),d=y.rotate(e,t),m=y.translate(...l),c=v.dot(s,d,m);this.data.displayMedia=this.data.displayMedia.dot(c),this.layout.shape.vertices=this.layout.shape.vertices.dot(o)}translate(e,t,a,n){this.layout.shape.vertices=this.layout.shape.vertices.dot(y.translate(e,t,a,n))}render(e){(e.keyboard.run(e.selectedPod).length||this.first)&&(e.context.clearRect(0,0,e.width,e.height),this.layout.shape.render(e),this.data.render(e,this.layout,this.playback,this.display),this.first=!1)}subsumes(e){return this.layoutManager.checkBounds(e)}}({data:v.random.randint(0,256,[10,10,4]).set(":",":",3)(1),layout:{origin:v.array([600,400,0,1]),size:v.array([270,270,270,1]),shape:x.cuboid},playback:{animate:!0,repeat:!1,alive:!0,animationPause:0},display:{border:!0}})]})})}]);